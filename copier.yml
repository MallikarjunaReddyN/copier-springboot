_min_copier_version: "9.0.0"

_subdirectory: "template"

_answers_file: .copier-answers.yml

group_id:
    type: str
    help: Enter Your group id
    placeholder: org.springframework.boot
    validator: "{% if not group_id  %}Please enter group id for your project{% endif %}"

project_name:
    type: str
    help: Enter Your project name
    placeholder: Example Service
    validator: "{% if not project_name %}Please enter project name for your project{% endif %}"

project_name_combined:
    type: str
    help: Combined project name
    default: "{% from 'slugify.jinja' import project_name_combined %}{{ project_name_combined(project_name) }}"
    validator: "{% if not project_name_combined %}Please enter group id for your project{% endif %}"

project_slug:
    type: str
    help: A slug of the project name
    default: "{% from 'slugify.jinja' import slugify %}{{ slugify(project_name) }}"
    validator: "{% if not project_slug %}Please enter group id for your project{% endif %}"

project_package:
    type: str
    help: Package name
    default: "{% from 'slugify.jinja' import project_package %}{{ project_package(project_name) }}"
    validator: "{% if not project_package %}Please enter package for your project{% endif %}"

server_port:
    type: str
    help: Server port
    default: "{{ range(1000, 5000) | random }}"
    validator: "{% if not server_port %}Please enter port number for your project{% endif %}"

version:
    type: str
    help: Enter your version
    default: "0.0.1"
    validator: "{% if not version %}Please enter version for your project{% endif %}"

project_description:
    type: str
    help: Enter Your project description
    default: "This is a Spring Boot {% from 'slugify.jinja' import get_entity_name %}{{ get_entity_name(project_name) }} Microservice"
    validator: "{% if not project_description %}Please enter project description for your project{% endif %}"

is_db_required:
    type: str
    help: Do you want database for your project?
    choices: 
        - 'Yes'
        - 'No'

db: 
    type: str
    help: Which database do you want?
    when: "{{ is_db_required == 'Yes' }}"
    choices:
        - 'MySQL'
        - 'PostgreSQL'

db_name:
    type: str
    help: Enter database name for you project
    default: "{{ project_slug }}"
    validator: "{% if not db_name %}Please enter DB name for your project{% endif %}"
    when: "{{ is_db_required == 'Yes' }}"

entity:
    type: str
    help: Enter Your entity name
    default: "{% from 'slugify.jinja' import get_entity_name %}{{ get_entity_name(project_name) }}"
    validator: "{% if not entity %}Please enter Entity name for your project{% endif %}"

docker:
    type: str
    help: Do you want dockerize you project?
    choices: 
        - 'Yes'
        - 'No'

container_registery:
    type: str
    help: which container registery do you want to use?
    when: "{{ docker == 'Yes' }}"
    choices: 
        - 'DockerHub'
        - 'ACR'

sca:
    type: str
    help: Do you want static code analysis for you project?
    choices: 
        - 'Yes'
        - 'No'

sca_type:
    type: str
    help: What static code analysis service do you want to use?
    when: "{{ sca == 'Yes' }}"
    choices:
        - 'SonarCloud'
        - 'SonarQube'

CI:
    type: str
    help: Do you want Continuous Integration for your project?
    choices: 
        - 'Yes'
        - 'No'

CI_type:
    type: str
    help: What Continuous Integration service do you want to use?
    when: "{{ CI == 'Yes' }}"
    choices:
        - 'Github Actions'
        - 'Azure Pipelines'

aks:
    type: str
    help: Do you want AKS deployment for your project?
    when: "{{ docker == 'Yes' }}"
    choices: 
        - 'Yes'
        - 'No'

_message_before_copy: |
    Thanks for generating a project using our template.

    You'll be asked a series of questions whose answers will be used to
    generate a tailored project for you.

_message_after_copy: |

    Your project "{{ project_name }}" has been created successfully!

    Next steps:

    1. Change directory to the project root:

       $ cd {{ _copier_conf.dst_path }}

    2. Run "chmod 777 ./mvnw"

    3. Run "./mvnw spring-boot:run"

    4. Visit http://localhost:{{ server_port }}/{{ project_slug }}/v1/swagger-ui

    {% if sca == 'Yes' %}Note: Please replace ##YOUR_ORGANIZATION## placeholder with your actaul organization in sonar-project.properties{% endif %}
    {% if container_registery == 'ACR' %}Note: Please replace ##YOUR_CONTAINER_REGISTRY## placeholder with your actual container registery in pom.xml, {%if CI_type == 'Github Actions' %} build-pipeline.yaml {% else %} azure-pipelines.yaml {% endif %} and k8s/deployment.yaml{% endif %}
    {% if container_registery == 'DockerHub' %} Note: Please replace ##REGISTERY_USERNAME## placeholder with your actaul dockerhub username in pom.xml{% endif %}

name: {{ project_name }} CI

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    name: Test - Units
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven
    - name: Build with Maven
      run: mvn compile test

  sonar:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Maven verify
        run: mvn -B clean verify
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          SONAR_TOKEN: {% raw %}${{ secrets.SONAR_TOKEN }}{% endraw %}
          SONAR_HOST_URL: {% raw %}${{ secrets.SONAR_HOST_URL }}{% endraw %}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
          # Force to fail step after specific time.
        timeout-minutes: 5
        env:
          SONAR_TOKEN: {% raw %}${{ secrets.SONAR_TOKEN }}{% endraw %}
      - name: "SonarQube Quality Gate Status"
        run: echo "The Quality Gate status is {% raw %}${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}{% endraw %}"
          
  build:
    name: Build, Publish & Docker push
    runs-on: ubuntu-latest
    needs: [test, sonar]
    permissions:
      packages: write
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven
    - name: Publish artifact on GitHub Packages
      if: contains(github.ref, 'release')
      run: mvn -B clean deploy -DskipTests
      env:
        GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
{% if docker %}
    - name: Docker build & push
      run: mvn clean compile jib:build -Djib.to.auth.username={% raw %}${{ secrets.DOCKER_USERNAME }}{% endraw %} -Djib.to.auth.password={% raw %}${{ secrets.DOCKER_PASSWORD }}{% endraw %} -Djib.to.tags={% raw %}${{ github.run_number }}{% endraw %}
{% endif %}
{% if docker and argocd -%} 
  update-manifest:
    name: Update Image tag in manifest file
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          repository: MallikarjunaReddyN/k8s-manifests
          ref: main
          token: {% raw %}${{ secrets.WORKFLOW_TOKEN }}{% endraw %}
      - name: setup git config
        run: |
          git config --global user.email "ciagent@gmail.com"
          git config --global user.name "CI Agent"
      - name: replace tag and save file for feature branches
        if: {% raw %}${{github.ref != 'refs/heads/dev' && github.ref != 'refs/heads/main' && !contains(github.ref, 'release')}}{% endraw %}
        run: sed -i 's#mallireddy1998.*#mallireddy1998/{{ project_slug }}:{% raw %}${{ github.run_number }}{% endraw %}#g' services/{{ project_slug }}/values.yaml
      - name: replace tag and save file for dev
        if: {% raw %}${{github.ref == 'refs/heads/dev'}}{% endraw %}
        run: sed -i 's#mallireddy1998.*#mallireddy1998/{{ project_slug }}:{% raw %}${{ github.run_number }}{% endraw %}#g' services/{{ project_slug }}/values-dev.yaml
      - name: replace tag and save file for qa
        if: {% raw %}${{github.ref == 'refs/heads/main'}}{% endraw %}
        run: sed -i 's#mallireddy1998.*#mallireddy1998/{{ project_slug }}:{% raw %}${{ github.run_number }}{% endraw %}#g' services/{{ project_slug }}/values-qa.yaml
      - name: replace tag and save file for prod
        if: contains(github.ref, 'release')
        run: sed -i 's#mallireddy1998.*#mallireddy1998/{{ project_slug }}:{% raw %}${{ github.run_number }}{% endraw %}#g' services/{{ project_slug }}/values-prod.yaml
      - name: stage & commit changes
        run: |
          git add .
          git commit -am "Update image for - "{% raw %}${{ github.run_number }}{% endraw %}""
      - name: push changes
        run: git push origin main
{%- endif %}

server.port={{ server_port }}
server.servlet.context-path=/{{ project_slug }}/v1
spring.application.name={{ project_slug }}
management.endpoint.health.probes.enabled=true
management.health.livenesstate.enabled=true
management.health.readinesstate.enabled=true
{% if is_db_required == 'Yes' %}
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
{% if db == 'MySQL' %}
spring.datasource.url=jdbc:mysql://localhost:3306/{{ db_name }}?createDatabaseIfNotExist=true
spring.datasource.username=mysql
spring.datasource.password=mysql@123
{% endif %}
{% if db == 'PostgreSQL' %}
spring.datasource.url=jdbc:postgresql://localhost:5432/{{ db_name }}?createDatabaseIfNotExist=true
spring.datasource.username=postgres
spring.datasource.password=postgres@123
{% endif %}
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update, validate)
spring.jpa.hibernate.ddl-auto=update
# Allows Hibernate to generate SQL optimized for a particular DBMS
{% if db == 'MySQL' %}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
{% endif %}
{% if db == 'PostgreSQL' %}
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
{% endif %}
{% endif %}
# Swagger config
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.swagger-ui.displayRequestDuration=true
plugins {
	id 'java'
	id 'checkstyle'
	id 'jacoco'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.4.0'
}

group = '{{ group_id }}'
version = '{{ version }}'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	{% if is_db_required %}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	{% endif %}
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
	compileOnly 'org.projectlombok:lombok'
	{% if is_db_required %}
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'
	{% endif %}
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName.set(project.name + ".jar")
}

checkstyle {
	toolVersion = '10.12.0'
	configFile file("${project.rootDir}/src/main/resources/checkstyle/checkstyle.xml")
}

checkstyleMain {
	source = 'src/main/java'
}

checkstyleTest {
	source = 'src/test/java'
}

test {
	finalizedBy jacocoTestReport //report is always generated after tests run
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
	}
}

jib {
    from {
        image = 'openjdk:17-alpine'
    }
    to {
        image = '{% if container_registery == 'ACR' %}##YOUR_CONTAINER_REGISTRY##{% endif %}{% if container_registery == 'DockerHub' %}registry.hub.docker.com/##REGISTERY_USERNAME##{% endif %}/' + project.name
    }
}